enable_language(CXX)

option(ALUMINUM_CLONE_VIA_SSH
  "Clone Aluminum using SSH instead of HTTPS" ${LBANN_SB_CLONE_VIA_SSH})

if (ALUMINUM_CLONE_VIA_SSH)
  set(ALUMINUM_URL git@github.com:llnl/Aluminum.git
    CACHE STRING "The URL from which to clone Aluminum")
else ()
  set(ALUMINUM_URL https://github.com/llnl/Aluminum
    CACHE STRING "The URL from which to clone Aluminum")
endif ()

set(ALUMINUM_TAG "master"
  CACHE STRING "The git tag to checkout for Aluminum")

set(ALUMINUM_CMAKE_BUILD_TYPE "${CMAKE_BUILD_TYPE}"
  CACHE STRING "The build type for Aluminum.")

# Where to install Aluminum
set (ALUMINUM_CMAKE_INSTALL_PREFIX "${CMAKE_INSTALL_PREFIX}"
  CACHE PATH "The installation location of Aluminum.")

# Configuration options explicitly exposed
option(ALUMINUM_ENABLE_CUDA "Enable CUDA support." OFF)
option(ALUMINUM_ENABLE_MPI_CUDA "Enable MPI-CUDA support." OFF)
option(ALUMINUM_ENABLE_NCCL "Enable NCCL support." OFF)

if (ALUMINUM_ENABLE_CUDA OR ALUMINUM_ENABLE_MPI_CUDA OR ALUMINUM_ENABLE_NCCL
    AND NOT ALUMINUM_ENABLE_ROCM)
  enable_language(CUDA)
endif ()

# Get the list of ALUMINUM variables
get_property(ALUMINUM_VARIABLES DIRECTORY PROPERTY VARIABLES)
list(FILTER ALUMINUM_VARIABLES INCLUDE REGEX
  "^ALUMINUM_.*\|^Aluminum_.*\|^LBANN_SB_FWD_ALUMINUM_.*\|^LBANN_SB_FWD_Aluminum_.*")
list(FILTER ALUMINUM_VARIABLES EXCLUDE REGEX
  "ALUMINUM_URL\|ALUMINUM_TAG\|ALUMINUM_CLONE_VIA_SSH")

create_cmake_arguments(
  OUTPUT_VARIABLE ALUMINUM_CMAKE_ARGS
  PACKAGE_NAME ALUMINUM
  SKIP_VARS_WITH_PREFIXES "LBANN_SB"
  EXTRA_REMOVE_PREFIXES "LBANN_SB_FWD_ALUMINUM" "LBANN_SB_FWD_Aluminum"
  VARIABLES ${ALUMINUM_VARIABLES})

if (ALUMINUM_CUSTOM_SOURCE_DIR)
  set(ALUMINUM_SOURCE_DIR "${ALUMINUM_CUSTOM_SOURCE_DIR}")
  set(ALUMINUM_URL "")
  set(ALUMINUM_TAG "")
  set(_GIT_REPOSITORY_TAG)
  set(_GIT_TAG_TAG)
  message(STATUS "Using ALUMINUM source in: ${ALUMINUM_SOURCE_DIR}")
else ()
  set(ALUMINUM_SOURCE_DIR "${CMAKE_CURRENT_BINARY_DIR}/src")
  set(_GIT_REPOSITORY_TAG "GIT_REPOSITORY")
  set(_GIT_TAG_TAG "GIT_TAG")
endif ()

include(ExternalProject)
ExternalProject_Add(ALUMINUM
  PREFIX ${CMAKE_CURRENT_BINARY_DIR}
  TMP_DIR ${CMAKE_CURRENT_BINARY_DIR}/tmp
  STAMP_DIR ${CMAKE_CURRENT_BINARY_DIR}/stamp
  ${_GIT_REPOSITORY_TAG} ${ALUMINUM_URL}
  ${_GIT_TAG_TAG} ${ALUMINUM_TAG}
  SOURCE_DIR ${ALUMINUM_SOURCE_DIR}
  BINARY_DIR ${CMAKE_CURRENT_BINARY_DIR}/build
  INSTALL_DIR ${ALUMINUM_CMAKE_INSTALL_PREFIX}
  USES_TERMINAL_BUILD 1
  LOG_DOWNLOAD 1
  LOG_UPDATE 1
  LOG_CONFIGURE 1
  LOG_BUILD 1
  LOG_INSTALL 1
  LOG_TEST 1
  LIST_SEPARATOR |
  CMAKE_ARGS
  -DCMAKE_CXX_COMPILER=${CMAKE_CXX_COMPILER}
  -DCMAKE_CXX_FLAGS=${CMAKE_CXX_FLAGS}
  -DCMAKE_CUDA_COMPILER=${CMAKE_CUDA_COMPILER}
  -DCMAKE_CUDA_FLAGS=${CMAKE_CUDA_FLAGS}
  -DCMAKE_CUDA_HOST_COMPILER=${CMAKE_CUDA_HOST_COMPILER}
  ${ALUMINUM_CMAKE_ARGS}
  )

set(ALUMINUM_DIR ${ALUMINUM_CMAKE_INSTALL_PREFIX}
  CACHE INTERNAL "The install prefix of Aluminum.")
